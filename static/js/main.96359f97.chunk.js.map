{"version":3,"sources":["components/header/Header.js","components/form/Form.js","components/task/Task.js","components/list/List.js","App.js","index.js"],"names":["Header","props","className","icon","showTasksCompleted","faEye","faEyeSlash","onClick","setShowTasksCompleted","Form","useState","task","setTask","action","onSubmit","ev","preventDefault","setTasks","tasks","id","uuidv4","description","isCompleted","type","placeholder","value","onChange","target","faPlusSquare","Task","isEditing","setIsEditing","setIsCompleted","taskDescription","setTaskDescription","faCheckSquare","faSquare","e","updateTaskIsCompleted","updateTaskDescription","faEdit","faTimes","deleteTask","List","taskId","newTasks","JSON","parse","stringify","filter","t","find","length","map","App","localStorage","getItem","init","useEffect","setItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96359f97.chunk.js","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\n\nconst Header = (props) => {\n\n    return (\n        <header className='header'>\n            <h1 className='header__title'>Task List</h1>\n            <button className='header__button' >\n                Completed task\n                 <FontAwesomeIcon\n                    icon={props.showTasksCompleted ? faEye : faEyeSlash}\n                    className='header__icon-button'\n                    onClick={() => props.setShowTasksCompleted(!props.showTasksCompleted)}\n                />\n            </button>\n        </header>\n    );\n}\n\nexport default Header;","import { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst Form = (props) => {\n\n    const [task, setTask] = useState('');\n\n    const addTask = (ev) => {\n\n        ev.preventDefault();\n\n        if (task && task !== '') {\n            props.setTasks(\n                [\n                    ...props.tasks,\n                    {\n                        id: uuidv4(),\n                        description: task,\n                        isCompleted: false\n                    }\n                ]\n            );\n        };\n\n        setTask('');\n    }\n\n    return (\n        <form action=\"\" onSubmit={addTask} className='form'>\n            <input\n                type=\"text\"\n                className='form__input'\n                placeholder='Type a task'\n                value={task}\n                onChange={(ev) => setTask(ev.target.value)}\n            />\n            <button\n                type='submit'\n                className='form__button'\n            >\n                <FontAwesomeIcon icon={faPlusSquare} className='form__icon-btn' />\n            </button>\n        </form>\n    );\n}\n\nexport default Form;","import { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckSquare, faEdit, faSquare, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nconst Task = (props) => {\n\n    const [isEditing, setIsEditing] = useState(false);\n    const [isCompleted, setIsCompleted] = useState(props.task.isCompleted);\n    const [taskDescription, setTaskDescription] = useState(props.task.description);\n\n    const updateTaskDescription = (e) => {\n        props.updateTaskDescription(e, props.task.id, taskDescription);\n        setIsEditing(!isEditing);\n    }\n\n    const updateTaskIsCompleted = (e) => {\n        props.updateTaskIsCompleted(props.task.id, !isCompleted);\n        setIsCompleted(!isCompleted);\n    }\n\n    return (\n\n        <li className='task-list__task'>\n\n            <FontAwesomeIcon\n                icon={isCompleted ? faCheckSquare : faSquare}\n                className='task-list__icon task-list__icon-check'\n                onClick={updateTaskIsCompleted}\n            />\n\n            <div className='task-list__text'>\n                {\n                    isEditing ?\n                        <form action=\"\" className='form-edit-task' onSubmit={updateTaskDescription}>\n                            <input\n                                type=\"text\"\n                                className='form-edit-task__input'\n                                value={taskDescription}\n                                onChange={(e) => setTaskDescription(e.target.value)}\n                            />\n                            <button\n                                type='submit'\n                                className='form-edit-task__btn'\n                            >Update</button>\n                        </form>\n                        :\n                        props.task.description\n                }\n            </div>\n\n            <div className='task-list__container-bottons'>\n                <FontAwesomeIcon\n                    icon={faEdit}\n                    className='task-list__icon task-list__action-icon'\n                    onClick={() => setIsEditing(!isEditing)}\n                />\n\n                <FontAwesomeIcon\n                    icon={faTimes}\n                    className='task-list__icon task-list__action-icon'\n                    onClick={() => props.deleteTask(props.task.id)}\n                />\n            </div>\n\n        </li>\n    );\n}\n\nexport default Task;","import Task from './../task/Task';\n\nconst List = (props) => {\n\n    const deleteTask = (taskId) => {\n        const newTasks = JSON.parse(JSON.stringify(props.tasks));\n        props.setTasks(newTasks.filter(t => t.id !== taskId));\n    }\n\n    const updateTaskDescription = (e, taskId, taskDescription) => {\n        e.preventDefault();\n\n        let newTasks = JSON.parse(JSON.stringify(props.tasks));\n        newTasks.find(t => t.id === taskId).description = taskDescription;\n        props.setTasks(newTasks);\n    }\n\n    const updateTaskIsCompleted = (taskId, isCompleted) => {\n\n        let newTasks = JSON.parse(JSON.stringify(props.tasks));\n        newTasks.find(t => t.id === taskId).isCompleted = isCompleted;\n        props.setTasks(newTasks);\n    }\n\n    return (\n        <ul className='task-list'>\n            {\n                props.tasks.length ?\n                    props.tasks.map(task => {\n                        if (!props.showTasksCompleted) {\n                            return (\n                                !task.isCompleted ?\n                                    <Task\n                                        key={task.id}\n                                        task={task}\n                                        deleteTask={deleteTask}\n                                        updateTaskDescription={updateTaskDescription}\n                                        updateTaskIsCompleted={updateTaskIsCompleted}\n                                    />\n                                    :\n                                    ''\n                            )\n                        } else {\n                            return <Task\n                                key={task.id}\n                                task={task}\n                                deleteTask={deleteTask}\n                                updateTaskDescription={updateTaskDescription}\n                                updateTaskIsCompleted={updateTaskIsCompleted}\n                            />\n                        }\n                    })\n                    :\n                    <div className='task-list__menssage'>There are no tasks</div>\n            }\n        </ul>\n    );\n}\n\nexport default List;","import './App.css';\nimport { useEffect, useState } from 'react';\n\n// Components\nimport Header from './components/header/Header';\nimport Form from './components/form/Form';\nimport List from './components/list/List';\n\n\nconst App = () => {\n\n  const init = () => {\n    const tasks = localStorage.getItem('tasks');\n\n    if (tasks === null) {\n      return [];\n    } else {\n      return JSON.parse(tasks);\n    }\n  }\n\n  const [tasks, setTasks] = useState(init());\n  const [showTasksCompleted, setShowTasksCompleted] = useState(true);\n\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n\n  return (\n    <div className='container'>\n      <Header setShowTasksCompleted={setShowTasksCompleted} showTasksCompleted={showTasksCompleted} />\n      <Form tasks={tasks} setTasks={setTasks} />\n      <List tasks={tasks} setTasks={setTasks} showTasksCompleted={showTasksCompleted} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}